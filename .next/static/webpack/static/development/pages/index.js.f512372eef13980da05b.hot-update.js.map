{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f512372eef13980da05b.hot-update.js","sources":["webpack:///./pages/Character.js"],"sourcesContent":["import '../styles/styles.css';\r\nimport React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport md5 from 'js-md5';\r\nimport CharacterPage from './CharacterPage';\r\n\r\nconst publickey = \"81c6ebd34a68f8a15e0f05333f23d01e\";\r\nconst privatekey = \"598a13c5054a75f151f34eb5923337659f0f9444\"\r\nlet timestamp = Date.now();\r\nlet limit = 100;\r\n\r\nmd5(timestamp + privatekey + publickey);\r\nvar hash = md5.create();\r\nhash.update(timestamp + privatekey + publickey);\r\nhash.hex();\r\n\r\n\r\n\r\n\r\nclass Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            myHero: null,\r\n            value: '',\r\n            error: ''\r\n        }\r\n        this.getInitialProps = this.getInitialProps.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.clearHero = this.clearHero.bind(this);\r\n    }\r\n\r\n\r\n    getInitialProps = async function () {\r\n        let hero = this.state.value;\r\n        let url = \"http://gateway.marvel.com/v1/public/characters?ts=\" + timestamp + \"&apikey=\" + publickey + \"&hash=\" + hash + \"&limit=\" + limit + \"&nameStartsWith=\" + hero;\r\n        let res = await fetch(url);\r\n        let data = await res.json();\r\n        let er = false;\r\n        if (data.code === 409 || data.data.total === 0) {\r\n            er = true;\r\n        };\r\n\r\n        // console.log(data.data.results);\r\n        console.log(data);\r\n        // console.log(data.data.count)\r\n        if (!er) {\r\n            let myHero = {\r\n                name: data.data.results[0].name,\r\n                img: `${data.data.results[0].thumbnail.path}.${data.data.results[0].thumbnail.extension}`,\r\n                description: data.data.results[0].description\r\n            }\r\n            this.setState({ myHero, error: \"\" });\r\n            console.log(data.data.results[0].name);\r\n        } else {\r\n            this.setState({ error: \"No results found in the Marvel Database.  Please try another Marvel Hero.\" })\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        console.log(this.state.value);\r\n        this.getInitialProps();\r\n        e.preventDefault();\r\n        this.setState({ value: \"\" });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ value: e.target.value });\r\n        console.log('handleChange');\r\n    }\r\n\r\n    clearHero() {\r\n        console.log(\"clear\")\r\n        this.setState({ myHero: null });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"content\">\r\n\r\n\r\n                {this.state.myHero ?\r\n                    <CharacterPage\r\n                        img={this.state.myHero.img}\r\n                        name={this.state.myHero.name}\r\n                        description={this.state.myHero.description}\r\n                        clear={this.clearHero}\r\n                    />\r\n                    :\r\n                    <form onSubmit={this.handleSubmit} className=\"center\">\r\n                        <input name=\"heroName\" value={this.state.value} type=\"text\" autocomplete=\"off\" onChange={this.handleChange} autofocus=\"true\"/>\r\n                        \r\n                        <input type=\"submit\" />\r\n                    </form>\r\n                }\r\n                {this.state.error ? <p className=\"error\">{this.state.error}</p> : \"\"}\r\n                <style jsx>{`\r\n                    \r\n                    input {\r\n                        height: 2em;\r\n                    }\r\n\r\n\r\n                    input:first-child {\r\n                    background: white;\r\n                    margin-right: 10px;\r\n                    color: black;   \r\n                    text-align: left;\r\n                    font-weight: 700;\r\n                    }\r\n                    .center {\r\n                    text-align: center;\r\n                    }\r\n\r\n                    input:nth-child(2) {\r\n                    width: max-width;\r\n                    padding: 5px 0;\r\n                    border: 2px solid red;\r\n                    text-shadow: 2px 2px 2px white;\r\n                    background: red;\r\n                    color: white;\r\n                    }\r\n\r\n                    .error {\r\n                        margin-top: 10px;\r\n                        font-size: 24px;\r\n                        color: red;\r\n                        text-shadow: 2px 2px 2px maroon;\r\n                  }\r\n\r\n\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Character;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAVA;AAWA;AACA;;;AA4BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;AAGA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAwDA;;;;AAvHA;AACA;AA0HA;;;;A","sourceRoot":""}